package org.diveinoracle.dbsequence.model;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Oct 05 03:23:55 GST 2020
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ClientsEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        ClientId,
        ClientName,
        ClientAddress;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int CLIENTID = AttributesEnum.ClientId.index();
    public static final int CLIENTNAME = AttributesEnum.ClientName.index();
    public static final int CLIENTADDRESS = AttributesEnum.ClientAddress.index();

    /**
     * This is the default constructor (do not remove).
     */
    public ClientsEOImpl() {
    }

    /**
     * Gets the attribute value for ClientId, using the alias name ClientId.
     * @return the value of ClientId
     */
    public Number getClientId() {
        return (Number) getAttributeInternal(CLIENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClientId.
     * @param value value to set the ClientId
     */
    public void setClientId(Number value) {
        setAttributeInternal(CLIENTID, value);
    }

    /**
     * Gets the attribute value for ClientName, using the alias name ClientName.
     * @return the value of ClientName
     */
    public String getClientName() {
        return (String) getAttributeInternal(CLIENTNAME);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClientName.
     * @param value value to set the ClientName
     */
    public void setClientName(String value) {
        setAttributeInternal(CLIENTNAME, value);
    }

    /**
     * Gets the attribute value for ClientAddress, using the alias name ClientAddress.
     * @return the value of ClientAddress
     */
    public String getClientAddress() {
        return (String) getAttributeInternal(CLIENTADDRESS);
    }

    /**
     * Sets <code>value</code> as the attribute value for ClientAddress.
     * @param value value to set the ClientAddress
     */
    public void setClientAddress(String value) {
        setAttributeInternal(CLIENTADDRESS, value);
    }

    /**
     * @param clientId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number clientId) {
        return new Key(new Object[] { clientId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("org.diveinoracle.dbsequence.model.ClientsEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
        
//        //1) Create SequenceImpl
//        SequenceImpl seqImpl = new SequenceImpl("CLIENT_SEQ",
//                                                this.getDBTransaction());
//        
//        //2) Seet ClientId Attribute to SequenceNumber of SequenceImpl
//        this.setClientId(seqImpl.getSequenceNumber());
        
    }
}

